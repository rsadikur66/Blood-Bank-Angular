using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Xml.Schema;

namespace BloodBankDAL.Repository.Query.Transaction
{
    public class T12201 : CommonDAL
    {
        public DataTable checkDonor(string P_PAT_NO, string P_NTNLTY_ID, string LANG)
        {
            return Query($"SELECT DISTINCT tab.*,  CASE    WHEN DIFF_STTS_SIGN ='YELLOW'    THEN '1'    WHEN DIFF_STTS_SIGN ='RED'    THEN '2'    WHEN DIFF_STTS_SIGN ='GREEN'    THEN '0'    ELSE NULL  END DIFF_STTS FROM  (SELECT T.T_HAMLA_STTS,T.T_BLOOD_DONATION_STATUS,    T.T_HAMLA_DATE,    T.T_PAT_NO,    T.T_NTNLTY_ID,    T.PAT_NAME,    T.YRS,    T.MOS,    T.T_SEX,    T.GENDER,    T.T_NTNLTY_CODE,    T.NATIONALITY,    T.MRTL_STTS,    T.T_MRTL_STATUS,    NVL(TO_NUMBER(T.T_EPISODE_NO),0) T_EPISODE_NO,    MAX(NVL(TO_NUMBER(T.T_EPISODE_NO),0)) OVER (PARTITION BY T.T_PAT_NO) LAST_EPISODE ,    T.T_ARRIVAL_DATE,    T.T_ARRIVAL_TIME,    (MAX(NVL(TO_NUMBER(T.T_DIFFERAL_DAY),0)) OVER (PARTITION BY T.T_PAT_NO)) DIFF_DAY,    T.T_ENTRY_DATE +(MAX(TO_NUMBER(T.T_DIFFERAL_DAY)) OVER (PARTITION BY T.T_PAT_NO)) DIFF_UPTO,    (SELECT      CASE        WHEN MAX(T_IF_FAIL)       = 0        AND T_REJECT_REASON      IS NULL        AND (T.T_VIOROLOGY_RESULT <>'2' or T_VIOROLOGY_RESULT is null )      THEN 'GREEN'        WHEN MAX(T_IF_FAIL)      = 0        AND (T_REJECT_REASON    IS NOT NULL        OR T.T_VIOROLOGY_RESULT <>'2' or T_VIOROLOGY_RESULT is null )        THEN 'YELLOW'        WHEN MAX(T_IF_FAIL)       = 1        AND (T.T_VIOROLOGY_RESULT <>'2' or T_VIOROLOGY_RESULT is null  )     THEN 'YELLOW'        WHEN T.T_VIOROLOGY_RESULT = '2'        THEN 'RED'        WHEN MAX(T_IF_FAIL) = 2        THEN 'RED'        ELSE 'WHITE'      END T_STATUS    FROM      (SELECT DISTINCT        CASE          WHEN T12068.T_EXP_ANS = T12071.T_QNO_ANS          THEN 0          WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS          AND T12068.T_IF_FAIL   = '1'          THEN 1          WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS          AND T12068.T_IF_FAIL   = '2'          THEN 2          ELSE NULL        END T_IF_FAIL      FROM T12071      INNER JOIN T12068      ON T12071.T_QNO     = T12068.T_QNO      WHERE T_DONOR_PATNO = '{P_PAT_NO}'      AND T_DONOR_EPISODE =        (SELECT MAX(T_DONOR_EPISODE)        FROM T12071        LEFT JOIN T12022        ON T12022.T_PAT_NO      = T12071.T_DONOR_PATNO        AND T12022.T_EPISODE_NO = T12071.T_DONOR_EPISODE        WHERE T_DONOR_PATNO     = '{P_PAT_NO}'        )      )    ) DIFF_STTS_SIGN,    T.T_UNIT_NO,    NVL2(T.DEATH_STTS,'1',NULL) DEATH_STTS,    MAX(T.T_VIOROLOGY_RESULT) T_VIOROLOGY_RESULT,    T_REJECT_REASON  FROM    (SELECT T12017.T_ENTRY_DATE T_HAMLA_DATE,      T12017.T_HAMLA_STTS ,      T03001.T_PAT_NO,      T03001.T_NTNLTY_ID,      T03001.T_FIRST_LANG{LANG}_NAME      ||' '      || T03001.T_FATHER_LANG{LANG}_NAME      ||' '      ||T03001.T_GFATHER_LANG{LANG}_NAME      ||' '      || T03001.T_FAMILY_LANG{LANG}_NAME PAT_NAME,      TRUNC(MONTHS_BETWEEN(SYSDATE,T03001.T_BIRTH_DATE) / 12, 0) YRS,      TRUNC(MOD(MONTHS_BETWEEN(SYSDATE, T03001.T_BIRTH_DATE), 12), 0) MOS,      T03001.T_GENDER T_SEX,      T02006.T_LANG{LANG}_NAME GENDER,      T03001.T_NTNLTY_CODE,      T02003.T_LANG{LANG}_NAME NATIONALITY,      T02007.T_LANG{LANG}_NAME MRTL_STTS,      T03001.T_MRTL_STATUS,      T12017.T_EPISODE_NO,      T12017.T_ARRIVAL_DATE,      T12017.T_ARRIVAL_TIME,      T12071.T_DIFFERAL_DAY,      T12017.T_ENTRY_DATE,      CASE WHEN T12068.T_EXP_ANS = T12071.T_QNO_ANS THEN 0   WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS    AND T12068.T_IF_FAIL   = '1'  THEN 1  WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS        AND T12068.T_IF_FAIL   = '2' THEN 2  ELSE NULL      END T_IF_FAIL,      T12017.T_BLOOD_DONATION_STATUS,      T12022.T_UNIT_NO,      T03004.T_DEATH_DATE DEATH_STTS,      T_VIOROLOGY_RESULT,      T12022.T_REJECT_REASON    FROM T03001    INNER JOIN T02006    ON T03001.T_GENDER = T02006.T_SEX_CODE    INNER JOIN T02007    ON T03001.T_MRTL_STATUS = T02007.T_MRTL_STATUS_CODE    INNER JOIN T02003    ON T03001.T_NTNLTY_CODE = T02003.T_NTNLTY_CODE    LEFT OUTER JOIN T12017    ON T03001.T_PAT_NO = T12017.T_PAT_NO    LEFT OUTER JOIN T12071    ON T12017.T_PAT_NO   = T12071.T_DONOR_PATNO    AND T12071.T_DONOR_EPISODE = T12017.T_EPISODE_NO    LEFT OUTER JOIN T12022    ON T12071.T_DONOR_PATNO    = T12022.T_PAT_NO    AND T12071.T_DONOR_EPISODE = T12022.T_EPISODE_NO    LEFT OUTER JOIN T12068    ON T12071.T_QNO = T12068.T_QNO    LEFT OUTER JOIN T03004    ON T03004.T_PAT_NO = T03001.T_PAT_NO    LEFT OUTER JOIN T12019    ON T12019.T_UNIT_NO   =T12022.T_UNIT_NO    WHERE ('{P_PAT_NO}'    IS NULL    OR T03001.T_PAT_NO    = '{P_PAT_NO}')    AND ('{P_NTNLTY_ID}' IS NULL    OR T03001.T_NTNLTY_ID = '{P_NTNLTY_ID}')    ) T  GROUP BY T.T_PAT_NO,    T.T_NTNLTY_ID,    T.PAT_NAME,    T.YRS,    T.MOS,    T.T_SEX, T.GENDER, T.T_NTNLTY_CODE,  T.NATIONALITY,  T.MRTL_STTS,    T.T_MRTL_STATUS,    T.T_EPISODE_NO,    T.T_EPISODE_NO,    T.T_ARRIVAL_DATE,    T.T_ARRIVAL_TIME ,    T.T_DIFFERAL_DAY ,    T.T_ENTRY_DATE ,    T.T_IF_FAIL ,    T.T_BLOOD_DONATION_STATUS,    T.T_UNIT_NO ,    T.T_HAMLA_STTS,    T.T_HAMLA_DATE,    T.DEATH_STTS,    T.T_VIOROLOGY_RESULT,    T.T_REJECT_REASON   ) tab WHERE T_EPISODE_NO = LAST_EPISODE");
           // return Query($"SELECT DISTINCT tab.*,  CASE    WHEN DIFF_STTS_SIGN ='YELLOW'    THEN '1'    WHEN DIFF_STTS_SIGN ='RED'    THEN '2'    WHEN DIFF_STTS_SIGN ='GREEN'    THEN '0'    ELSE NULL  END DIFF_STTS FROM  (SELECT T.T_HAMLA_STTS,T.T_BLOOD_DONATION_STATUS,    T.T_HAMLA_DATE,    T.T_PAT_NO,    T.T_NTNLTY_ID,    T.PAT_NAME,    T.YRS,    T.MOS,    T.T_SEX,    T.GENDER,    T.T_NTNLTY_CODE,    T.NATIONALITY,    T.MRTL_STTS,    T.T_MRTL_STATUS,    NVL(TO_NUMBER(T.T_EPISODE_NO),0) T_EPISODE_NO,    MAX(NVL(TO_NUMBER(T.T_EPISODE_NO),0)) OVER (PARTITION BY T.T_PAT_NO) LAST_EPISODE ,    T.T_ARRIVAL_DATE,    T.T_ARRIVAL_TIME,    (MAX(NVL(TO_NUMBER(T.T_DIFFERAL_DAY),0)) OVER (PARTITION BY T.T_PAT_NO)) DIFF_DAY,    T.T_ENTRY_DATE +(MAX(TO_NUMBER(T.T_DIFFERAL_DAY)) OVER (PARTITION BY T.T_PAT_NO)) DIFF_UPTO,    (SELECT      CASE        WHEN MAX(T_IF_FAIL)       = 0        AND T_REJECT_REASON      IS NULL        AND T.T_VIOROLOGY_RESULT <>'2'        THEN 'GREEN'        WHEN MAX(T_IF_FAIL)      = 0        AND (T_REJECT_REASON    IS NOT NULL        OR T.T_VIOROLOGY_RESULT <>'2')        THEN 'YELLOW'        WHEN MAX(T_IF_FAIL)       = 1        AND T.T_VIOROLOGY_RESULT <>'2'        THEN 'YELLOW'        WHEN T.T_VIOROLOGY_RESULT = '2'        THEN 'RED'        WHEN MAX(T_IF_FAIL) = 2        THEN 'RED'        ELSE 'WHITE'      END T_STATUS    FROM      (SELECT DISTINCT        CASE          WHEN T12068.T_EXP_ANS = T12071.T_QNO_ANS          THEN 0          WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS          AND T12068.T_IF_FAIL   = '1'          THEN 1          WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS          AND T12068.T_IF_FAIL   = '2'          THEN 2          ELSE NULL        END T_IF_FAIL      FROM T12071      INNER JOIN T12068      ON T12071.T_QNO     = T12068.T_QNO      WHERE T_DONOR_PATNO = '{P_PAT_NO}'      AND T_DONOR_EPISODE =        (SELECT MAX(T_DONOR_EPISODE)        FROM T12071        INNER JOIN T12022        ON T12022.T_PAT_NO      = T12071.T_DONOR_PATNO        AND T12022.T_EPISODE_NO = T12071.T_DONOR_EPISODE        WHERE T_DONOR_PATNO     = '{P_PAT_NO}'        )      )    ) DIFF_STTS_SIGN,    T.T_UNIT_NO,    NVL2(T.DEATH_STTS,'1',NULL) DEATH_STTS,    MAX(T.T_VIOROLOGY_RESULT) T_VIOROLOGY_RESULT,    T_REJECT_REASON  FROM    (SELECT T12017.T_ENTRY_DATE T_HAMLA_DATE,      T12017.T_HAMLA_STTS ,      T03001.T_PAT_NO,      T03001.T_NTNLTY_ID,      T03001.T_FIRST_LANG{LANG}_NAME      ||' '      || T03001.T_FATHER_LANG{LANG}_NAME      ||' '      ||T03001.T_GFATHER_LANG{LANG}_NAME      ||' '      || T03001.T_FAMILY_LANG{LANG}_NAME PAT_NAME,      TRUNC(MONTHS_BETWEEN(SYSDATE,T03001.T_BIRTH_DATE) / 12, 0) YRS,      TRUNC(MOD(MONTHS_BETWEEN(SYSDATE, T03001.T_BIRTH_DATE), 12), 0) MOS,      T03001.T_GENDER T_SEX,      T02006.T_LANG{LANG}_NAME GENDER,      T03001.T_NTNLTY_CODE,      T02003.T_LANG{LANG}_NAME NATIONALITY,      T02007.T_LANG{LANG}_NAME MRTL_STTS,      T03001.T_MRTL_STATUS,      T12017.T_EPISODE_NO,      T12017.T_ARRIVAL_DATE,      T12017.T_ARRIVAL_TIME,      T12071.T_DIFFERAL_DAY,      T12017.T_ENTRY_DATE,      CASE WHEN T12068.T_EXP_ANS = T12071.T_QNO_ANS THEN 0   WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS    AND T12068.T_IF_FAIL   = '1'  THEN 1  WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS        AND T12068.T_IF_FAIL   = '2' THEN 2  ELSE NULL      END T_IF_FAIL,      T12017.T_BLOOD_DONATION_STATUS,      T12022.T_UNIT_NO,      T03004.T_PAT_NO DEATH_STTS,      T_VIOROLOGY_RESULT,      T12022.T_REJECT_REASON    FROM T03001    INNER JOIN T02006    ON T03001.T_GENDER = T02006.T_SEX_CODE    INNER JOIN T02007    ON T03001.T_MRTL_STATUS = T02007.T_MRTL_STATUS_CODE    INNER JOIN T02003    ON T03001.T_NTNLTY_CODE = T02003.T_NTNLTY_CODE    LEFT OUTER JOIN T12017    ON T03001.T_PAT_NO = T12017.T_PAT_NO    LEFT OUTER JOIN T12071    ON T12017.T_PAT_NO   = T12071.T_DONOR_PATNO    AND T12071.T_DONOR_EPISODE = T12017.T_EPISODE_NO    LEFT OUTER JOIN T12022    ON T12071.T_DONOR_PATNO    = T12022.T_PAT_NO    AND T12071.T_DONOR_EPISODE = T12022.T_EPISODE_NO    LEFT OUTER JOIN T12068    ON T12071.T_QNO = T12068.T_QNO    LEFT OUTER JOIN T03004    ON T03004.T_PAT_NO = T03001.T_PAT_NO    LEFT OUTER JOIN T12019    ON T12019.T_UNIT_NO   =T12022.T_UNIT_NO    WHERE ('{P_PAT_NO}'    IS NULL    OR T03001.T_PAT_NO    = '{P_PAT_NO}')    AND ('{P_NTNLTY_ID}' IS NULL    OR T03001.T_NTNLTY_ID = '{P_NTNLTY_ID}')    ) T  GROUP BY T.T_PAT_NO,    T.T_NTNLTY_ID,    T.PAT_NAME,    T.YRS,    T.MOS,    T.T_SEX, T.GENDER, T.T_NTNLTY_CODE,  T.NATIONALITY,  T.MRTL_STTS,    T.T_MRTL_STATUS,    T.T_EPISODE_NO,    T.T_EPISODE_NO,    T.T_ARRIVAL_DATE,    T.T_ARRIVAL_TIME ,    T.T_DIFFERAL_DAY ,    T.T_ENTRY_DATE ,    T.T_IF_FAIL ,    T.T_BLOOD_DONATION_STATUS,    T.T_UNIT_NO ,    T.T_HAMLA_STTS,    T.T_HAMLA_DATE,    T.DEATH_STTS,    T.T_VIOROLOGY_RESULT,    T.T_REJECT_REASON   ) tab WHERE T_EPISODE_NO = LAST_EPISODE");
            // return Query($"SELECT DISTINCT * FROM (SELECT T.T_HAMLA_STTS, T.T_HAMLA_DATE,T.T_PAT_NO,T.T_NTNLTY_ID,T.PAT_NAME,T.YRS,T.MOS,T.T_SEX,T.GENDER,T.T_NTNLTY_CODE,T.NATIONALITY,T.MRTL_STTS,T.T_MRTL_STATUS,NVL(TO_NUMBER(T.T_EPISODE_NO),0) T_EPISODE_NO,MAX(NVL(TO_NUMBER(T.T_EPISODE_NO),0)) OVER (PARTITION BY T.T_PAT_NO) LAST_EPISODE , T.T_ARRIVAL_DATE,T.T_ARRIVAL_TIME,(MAX(NVL(TO_NUMBER(T.T_DIFFERAL_DAY),0)) OVER (PARTITION BY T.T_PAT_NO)) DIFF_DAY,  T.T_ENTRY_DATE +(MAX(TO_NUMBER(T.T_DIFFERAL_DAY)) OVER (PARTITION BY T.T_PAT_NO))  DIFF_UPTO,  DECODE(NVL(T.T_BLOOD_DONATION_STATUS,0),0,NULL,1, (MAX(NVL(TO_NUMBER(T.T_IF_FAIL),0)) OVER (PARTITION BY T.T_PAT_NO))) DIFF_STTS,  (SELECT   CASE WHEN MAX(T_IF_FAIL) = 0 THEN 'GREEN' WHEN MAX(T_IF_FAIL) = 1         THEN 'YELLOW'  WHEN MAX(T_IF_FAIL) = 2 THEN 'RED' ELSE 'WHITE' END T_STATUS FROM   (SELECT DISTINCT  CASE  WHEN T12068.T_EXP_ANS = T12071.T_QNO_ANS    THEN 0    WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS  AND T12068.T_IF_FAIL = '1'  THEN 1 WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS  AND T12068.T_IF_FAIL = '2'    THEN 2    ELSE null  END T_IF_FAIL FROM T12071 INNER JOIN T12068 ON T12071.T_QNO = T12068.T_QNO  WHERE T_DONOR_PATNO = '{P_PAT_NO}' AND T_DONOR_EPISODE = (SELECT MAX(T_DONOR_EPISODE) FROM T12071 INNER JOIN T12022 ON T12022.T_PAT_NO = T12071.T_DONOR_PATNO AND T12022.T_EPISODE_NO = T12071.T_DONOR_EPISODE  WHERE T_DONOR_PATNO = '{P_PAT_NO}') )) DIFF_STTS_SIGN,  T.T_UNIT_NO FROM (SELECT  T12017.T_ENTRY_DATE T_HAMLA_DATE,T12017.T_HAMLA_STTS ,T03001.T_PAT_NO,T03001.T_NTNLTY_ID, T03001.T_FIRST_LANG{LANG}_NAME  ||' '  || T03001.T_FATHER_LANG{LANG}_NAME  ||' '  ||T03001.T_GFATHER_LANG{LANG}_NAME  ||' '  || T03001.T_FAMILY_LANG{LANG}_NAME PAT_NAME,    TRUNC(MONTHS_BETWEEN(SYSDATE,T03001.T_BIRTH_DATE) / 12, 0) YRS,  TRUNC(MOD(MONTHS_BETWEEN(SYSDATE, T03001.T_BIRTH_DATE), 12), 0) MOS,  T03001.T_GENDER T_SEX,  T02006.T_LANG{LANG}_NAME GENDER,    T03001.T_NTNLTY_CODE,  T02003.T_LANG{LANG}_NAME NATIONALITY,  T02007.T_LANG{LANG}_NAME MRTL_STTS,  T03001.T_MRTL_STATUS,  T12017.T_EPISODE_NO,T12017.T_ARRIVAL_DATE,T12017.T_ARRIVAL_TIME,T12071.T_DIFFERAL_DAY,T12017.T_ENTRY_DATE, CASE        WHEN T12068.T_EXP_ANS = T12071.T_QNO_ANS        THEN 0        WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS        AND T12068.T_IF_FAIL = '1'        then 1        WHEN T12068.T_EXP_ANS <> T12071.T_QNO_ANS        AND T12068.T_IF_FAIL = '2'        THEN 2        ELSE null      END T_IF_FAIL, T12017.T_BLOOD_DONATION_STATUS,T12022.T_UNIT_NO FROM T03001 INNER JOIN T02006 ON T03001.T_GENDER = T02006.T_SEX_CODE INNER JOIN T02007 ON T03001.T_MRTL_STATUS = T02007.T_MRTL_STATUS_CODE INNER JOIN T02003 ON T03001.T_NTNLTY_CODE  = T02003.T_NTNLTY_CODE LEFT OUTER JOIN T12017 ON T03001.T_PAT_NO = T12017.T_PAT_NO LEFT OUTER JOIN T12071 ON T12017.T_PAT_NO = T12071.T_DONOR_PATNO AND T12071.T_DONOR_EPISODE  = T12017.T_EPISODE_NO LEFT OUTER JOIN T12022  ON T12071.T_DONOR_PATNO = T12022.T_PAT_NO AND T12071.T_DONOR_EPISODE  = T12022.T_EPISODE_NO LEFT JOIN T12068 ON T12071.T_QNO = T12068.T_QNO  WHERE ('{P_PAT_NO}' IS NULL OR T03001.T_PAT_NO = '{P_PAT_NO}') AND ('{P_NTNLTY_ID}' IS NULL OR T03001.T_NTNLTY_ID = '{P_NTNLTY_ID}') ) T GROUP BY T.T_PAT_NO,T.T_NTNLTY_ID,T.PAT_NAME,T.YRS,T.MOS,T.T_SEX,T.GENDER,T.T_NTNLTY_CODE,T.NATIONALITY,T.MRTL_STTS,T.T_MRTL_STATUS,T.T_EPISODE_NO,T.T_EPISODE_NO,T.T_ARRIVAL_DATE,T.T_ARRIVAL_TIME ,T.T_DIFFERAL_DAY ,T.T_ENTRY_DATE ,T.T_IF_FAIL ,T.T_BLOOD_DONATION_STATUS,T.T_UNIT_NO ,T.T_HAMLA_STTS,T.T_HAMLA_DATE) WHERE T_EPISODE_NO = LAST_EPISODE");
        }

        public DataTable GetReasonList(int age, string lang)
        {
            return Query($"SELECT T_DOTN_RSN_CODE CODE,T_LANG{lang}_NAME NAME FROM T12006 WHERE {age} between TO_NUMBER(T_AGE_FRM) AND  TO_NUMBER(T_AGE_TO) ORDER BY T_DOTN_RSN_CODE");
        }
public DataTable GetSingleReason(int age, string lang, string reasonCode)
        {
            return Query($"SELECT T_DOTN_RSN_CODE CODE,T_LANG{lang}_NAME NAME FROM T12006 WHERE {age} between TO_NUMBER(T_AGE_FRM) AND  TO_NUMBER(T_AGE_TO) AND ('{reasonCode}' IS NULL OR T_DOTN_RSN_CODE = '{reasonCode}') ORDER BY T_DOTN_RSN_CODE");
        }

        public bool insert(string T_ENTRY_USER, string T_PAT_NO, string T_DONOR_NTNLTY_ID, string T_DOTN_RSN_CODE,string T_REF_PAT_NO, string T_OTHER_PAT_NAME, string T_SITE_CODE)
        {//T_EPISODE_NO
            string episode = Query($"SELECT NVL(MAX(TO_NUMBER(NVL(T_EPISODE_NO,0))),0)+1 T_EPISODE_NO   FROM T12017 WHERE T_PAT_NO = '{T_PAT_NO}' AND T_DONOR_NTNLTY_ID = '{T_DONOR_NTNLTY_ID}'")
                    .Rows[0]["T_EPISODE_NO"].ToString();
            //T_DONATION_SEQ_NO
            string seq = Query($"SELECT LPAD(donation_no_seq.nextval,8,'0') T_DONATION_SEQ_NO FROM DUAL").Rows[0]["T_DONATION_SEQ_NO"].ToString();
            //T_REQUEST_ID
            int req = Int32.Parse(Query($"SELECT NVL(MAX(T_REQUEST_ID),0)+1 T_REQUEST_ID FROM T12017").Rows[0]["T_REQUEST_ID"].ToString());
            //T_DONATION_DATE

            return Command($"INSERT INTO T12017 (T_ENTRY_USER,T_ENTRY_DATE,T_REQUEST_ID,T_PAT_NO,T_DONOR_NTNLTY_ID,T_EPISODE_NO,T_DONATION_SEQ_NO,T_DONATION_DATE,T_ARRIVAL_DATE,T_DOTN_RSN_CODE,T_REF_PAT_NO,T_OTHER_PAT_NAME,T_SITE_CODE) VALUES ('{T_ENTRY_USER}',SYSDATE,{req},'{T_PAT_NO}','{T_DONOR_NTNLTY_ID}','{episode}','{seq}',SYSDATE, SYSDATE ,'{T_DOTN_RSN_CODE}','{T_REF_PAT_NO}','{T_OTHER_PAT_NAME}','{T_SITE_CODE}')");
        }

        public DataTable GetPatientData(string lang, string searchValue)
        {
            return Query($"SELECT * FROM (SELECT T_REF_PAT_NO,T_OTHER_PAT_NAME,RowNum rww FROM( SELECT T_PAT_NO T_REF_PAT_NO,T_FIRST_LANG{lang}_NAME ||' '|| T_FATHER_LANG{lang}_NAME ||' '|| T_GFATHER_LANG{lang}_NAME ||' '|| T_MOTHER_LANG{lang}_NAME || ' ' || T_FAMILY_LANG{lang}_NAME T_OTHER_PAT_NAME FROM T03001) WHERE (UPPER(T_OTHER_PAT_NAME)like '%' || UPPER('{searchValue}') || '%' OR T_REF_PAT_NO LIKE '%'|| UPPER('{searchValue}') || '%')) where rww < 500");
        }

        public string GetArabicName(string patNo)
        {
            return Query($"SELECT T_FIRST_LANG1_NAME||' '||T_FATHER_LANG1_NAME||' '|| T_GFATHER_LANG1_NAME||' '|| T_MOTHER_LANG1_NAME|| ' '|| T_FAMILY_LANG1_NAME T_PAT_NAME FROM T03001 WHERE t_pat_no ='{patNo}'").Rows[0][0].ToString();
        }

        public DataTable ChekApheresis(string patNo, string epsot)
        {
            DataTable querey = new DataTable(); 
            var apheresis = Query($"select T_APHERESIS FROM T12022 WHERE T_PAT_NO= '{patNo}' AND T_EPISODE_NO='{epsot}'").Rows[0]["T_APHERESIS"].ToString();
            if (apheresis=="1")
            {
               // querey = Query($"SELECT CASE  WHEN T_PLT ='1' AND T_PLSMA ='1' AND T_RBCS='1'  THEN  CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 0 ELSE 60-( TRUNC(sysdate -T_DONATION_DATE)) END  WHEN T_PLT ='1' AND T_PLSMA ='1' AND T_RBCS is null THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=30 THEN 0 ELSE 30-( TRUNC(sysdate -T_DONATION_DATE)) END WHEN T_PLT ='1' AND T_PLSMA is null AND T_RBCS is null THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=7 THEN 0 ELSE 7-( TRUNC(sysdate -T_DONATION_DATE)) END WHEN T_PLT is null AND T_PLSMA ='1' AND T_RBCS ='1' THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 0 ELSE 60-( TRUNC(sysdate -T_DONATION_DATE)) END  WHEN T_PLT is null AND T_PLSMA is null  AND T_RBCS ='1' THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 0 ELSE 60-( TRUNC(sysdate -T_DONATION_DATE)) END    WHEN T_PLT ='1' AND T_PLSMA is null AND T_RBCS ='1' THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 0 ELSE 60-( TRUNC(sysdate -T_DONATION_DATE)) END WHEN T_PLT is null AND T_PLSMA ='1' AND T_RBCS is null    THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=30 THEN 0 ELSE 30-( TRUNC(sysdate -T_DONATION_DATE)) END WHEN T_PLT is null AND T_PLSMA is null AND T_RBCS is null  THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=0 THEN 0 ELSE 0-( TRUNC(sysdate -T_DONATION_DATE)) END  END NEXT_DATE,T_APHERESIS,T_DONATION_DATE FROM T12022 WHERE T_PAT_NO= '{patNo}' AND T_EPISODE_NO='{epsot}'");
               // querey = Query($"SELECT CASE  WHEN T_PLT ='1' AND T_PLSMA ='1' AND T_RBCS='1'  THEN  CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 'OK' ELSE 'Not_Ok' END  WHEN T_PLT ='1' AND T_PLSMA ='1' AND T_RBCS is null THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=30 THEN 'OK' ELSE 'Not_Ok' END WHEN T_PLT ='1' AND T_PLSMA is null AND T_RBCS is null THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=7 THEN 'OK' ELSE 'Not_Ok' END WHEN T_PLT is null AND T_PLSMA ='1' AND T_RBCS ='1' THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 'OK' ELSE 'Not_Ok' END  WHEN T_PLT is null AND T_PLSMA is null  AND T_RBCS ='1' THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 'OK' ELSE 'Not_Ok' END    WHEN T_PLT ='1' AND T_PLSMA is null AND T_RBCS ='1' THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 'OK' ELSE 'Not_Ok' END WHEN T_PLT is null AND T_PLSMA ='1' AND T_RBCS is null    THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=30 THEN 'OK' ELSE 'Not_Ok' END WHEN T_PLT is null AND T_PLSMA is null AND T_RBCS is null  THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=0 THEN 'OK' ELSE 'Not_Ok' END  END Plt_Pla_RBC,T_APHERESIS,T_DONATION_DATE FROM T12022 WHERE T_PAT_NO= '{patNo}' AND T_EPISODE_NO='{epsot}'");
            //with plt,plasma and RBCS  
             querey = Query($"SELECT CASE  WHEN T_PLT  ='1'  AND T_PLSMA ='1'    AND T_RBCS  ='1'    THEN   'PLT,PLASMA and RBCS'     WHEN T_PLT  ='1'    AND T_PLSMA ='1'    AND T_RBCS IS NULL    THEN  'PLT and PLASMA'   WHEN T_PLT   ='1'    AND T_PLSMA IS NULL    AND T_RBCS   ='1'    THEN  'PLT and RBCS'    WHEN T_PLT  IS NULL    AND T_PLSMA IS NULL    AND T_RBCS  IS NULL    THEN  'OK' END PLT_PLA_RBC,  CASE    WHEN T_PLT  ='1'    AND T_PLSMA ='1'    AND T_RBCS  ='1'    THEN  CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 0 ELSE 60-( TRUNC(sysdate -T_DONATION_DATE)) END     WHEN T_PLT  ='1'    AND T_PLSMA ='1'    AND T_RBCS IS NULL    THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=30 THEN 0 ELSE 30-( TRUNC(sysdate -T_DONATION_DATE)) END    WHEN T_PLT   ='1'    AND T_PLSMA IS NULL    AND T_RBCS   ='1'    THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=60 THEN 0 ELSE 60-( TRUNC(sysdate -T_DONATION_DATE)) END    WHEN T_PLT  ='1'    AND T_PLSMA IS NULL    AND T_RBCS  IS NULL    THEN CASE WHEN TRUNC(SYSDATE)-T_DONATION_DATE >=7 THEN 0 ELSE 7-( TRUNC(sysdate -T_DONATION_DATE)) END  END NEXT_DAYS, T_APHERESIS,  T_DONATION_DATE FROM T12022 WHERE T_PAT_NO  = '{patNo}' AND T_EPISODE_NO='{epsot}'");
            }
            else
            {
                querey = Query($"select T_DONATION_DATE,TRUNC(sysdate -T_DONATION_DATE)COUNT_DATE,TRUNC(T_DONATION_DATE+57)NEXT_DATE FROM T12022 WHERE T_PAT_NO= '{patNo}' AND T_EPISODE_NO='{epsot}'");
                //querey = Query($"select T_DONATION_DATE,TRUNC(sysdate -T_DONATION_DATE)COUNT_DATE FROM T12022 WHERE T_PAT_NO= '{patNo}' AND T_EPISODE_NO='{epsot}'");
            }
            return querey;
        }
    }
} 