using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;

namespace BloodBankDAL.Repository.Query.Transaction
{
    public class T12235 : CommonDAL
    {
        //For Unit From and Unit To Data 

        public DataTable GetUnitData(string T_SITE_CODE)
        {
            //return Query($"SELECT DISTINCT A.T_UNIT_NO,B.T_BLOOD_GROUP,B.T_DONATION_DATE FROM T12022 B, T12019 A, T12017 C WHERE A.T_UNIT_NO = B.T_UNIT_NO AND B.T_PAT_NO = C.T_PAT_NO AND B.T_EPISODE_NO = C.T_EPISODE_NO  AND A.T_VERIFY IS NULL AND C.T_SITE_CODE ='{T_SITE_CODE}'  ORDER BY T_UNIT_NO");
            return Query($"SELECT DISTINCT T19.T_UNIT_NO,T22.T_BLOOD_GROUP, TO_CHAR(T22.T_DONATION_DATE, 'DD-MON-YYYY')  T_DONATION_DATE FROM T12019  T19 INNER JOIN T12022  T22 ON T22.T_UNIT_NO = T19.T_UNIT_NO INNER JOIN T12135 T35 ON T35.T_UNIT_NO = T19.T_UNIT_NO INNER JOIN T12017 T17 ON T17.T_REQUEST_ID = T22.T_REQUEST_ID /*AND T19.T_VERIFY IS NULL*/ AND T17.T_SITE_CODE = '{T_SITE_CODE}' AND T35.T_CHECK_FLAG IS NOT NULL ORDER BY T_UNIT_NO");
        }

        //For popup Data
        public DataTable GetBloodData(string language)
        {
            return Query($"SELECT T_ABO_CODE T_BLOOD_GROUP,T_LANG{language}_NAME T_LANG_NAME FROM T12004 ORDER BY T_ABO_CODE");//,T_DS_RHF T_ANTIBODY
        }

        //For Grid View
        public DataTable GetGridData(string language,string unitFrom, string unitTo)
        {
            //return Query($"WITH TRANTABLE AS (SELECT T12220.T_UNIT_NO,T_ABO_CODE,T_LANG{language}_NAME,T_RH_NAME,RH_KELL, RH_PHENO,T_ANTIBODY,T_DU FROM T12004 INNER JOIN T12220 ON T12004.T_ABO_CODE = T12220.T_BLOOD_GROUP INNER JOIN T12163 ON T12220.T_UNIT_NO = T12163.T_UNIT_NO),MAINTAB AS(SELECT * FROM T12019) SELECT DISTINCT MAINTAB.T_VERIFY,MAINTAB.T_UNIT_NO,TRANTABLE.T_ABO_CODE T_BLOOD_GROUP,T_LANG{language}_NAME T_LANG_NAME,TRANTABLE.T_ANTIBODY,DECODE(MAINTAB.T_DU,'1','Positive','2','Negative')T_DU_NAME,MAINTAB.T_DU,TRANTABLE.T_RH_NAME,TRANTABLE.RH_KELL, TRANTABLE.RH_PHENO,MAINTAB.T_NOTES RESULT FROM MAINTAB LEFT OUTER JOIN TRANTABLE ON MAINTAB.T_UNIT_NO = TRANTABLE.T_UNIT_NO WHERE MAINTAB.T_UNIT_NO BETWEEN '{unitFrom}' AND '{unitTo}' AND MAINTAB.T_VERIFY IS  NULL ORDER BY MAINTAB.T_UNIT_NO");
            // Ruhul comment start
            // return Query($"WITH TRANTABLE AS (SELECT T12220.T_UNIT_NO,T_ABO_CODE,T_LANG{language}_NAME,T_RH_NAME,RH_KELL, RH_PHENO,T_ANTIBODY,T_DU FROM T12004 INNER JOIN T12220 ON T12004.T_ABO_CODE = T12220.T_BLOOD_GROUP INNER JOIN T12163 ON T12220.T_UNIT_NO = T12163.T_UNIT_NO),MAINTAB AS(SELECT * FROM T12019) SELECT DISTINCT MAINTAB.T_VERIFY,MAINTAB.T_UNIT_NO,TRANTABLE.T_ABO_CODE T_BLOOD_GROUP,T_LANG{language}_NAME T_LANG_NAME,TRANTABLE.T_ANTIBODY,MAINTAB.T_ANTIBODY_1,DECODE(MAINTAB.T_DU,'1','Positive','2','Negative')T_DU_NAME,MAINTAB.T_DU,TRANTABLE.T_RH_NAME,TRANTABLE.RH_KELL, TRANTABLE.RH_PHENO,MAINTAB.T_NOTES RESULT FROM MAINTAB INNER JOIN T12022  T22 ON T22.T_UNIT_NO = MAINTAB.T_UNIT_NO INNER JOIN T12017 T17 ON T17.T_REQUEST_ID = T22.T_REQUEST_ID LEFT OUTER JOIN TRANTABLE ON MAINTAB.T_UNIT_NO = TRANTABLE.T_UNIT_NO WHERE MAINTAB.T_UNIT_NO BETWEEN '{unitFrom}' AND '{unitTo}' /*AND MAINTAB.T_VERIFY IS  NULL */ ORDER BY MAINTAB.T_UNIT_NO");
            // Ruhul comment end
            return Query($"WITH TRANTABLE AS (SELECT T12220.T_UNIT_NO,T_ABO_CODE,T_LANG{language}_NAME,T_RH_NAME,RH_KELL, RH_PHENO,T_ANTIBODY,T_DU FROM T12004 INNER JOIN T12220 ON T12004.T_ABO_CODE = T12220.T_BLOOD_GROUP INNER JOIN T12163 ON T12220.T_UNIT_NO = T12163.T_UNIT_NO),MAINTAB AS(SELECT * FROM T12019) SELECT DISTINCT MAINTAB.T_VERIFY,MAINTAB.T_UNIT_NO,TRANTABLE.T_ABO_CODE T_BLOOD_GROUP,T_LANG{language}_NAME T_LANG_NAME,TRANTABLE.T_ANTIBODY,MAINTAB.T_ANTIBODY_1,DECODE(MAINTAB.T_DU,'1','Positive','2','Negative')T_DU_NAME,MAINTAB.T_DU,TRANTABLE.T_RH_NAME,TRANTABLE.RH_KELL, TRANTABLE.RH_PHENO,MAINTAB.T_NOTES RESULT FROM MAINTAB INNER JOIN T12022  T22 ON T22.T_UNIT_NO = MAINTAB.T_UNIT_NO INNER JOIN T12017 T17 ON T17.T_REQUEST_ID = T22.T_REQUEST_ID LEFT OUTER JOIN TRANTABLE ON MAINTAB.T_UNIT_NO = TRANTABLE.T_UNIT_NO INNER JOIN T12135 T35 ON MAINTAB.T_UNIT_NO = T35.T_UNIT_NO  WHERE MAINTAB.T_UNIT_NO BETWEEN '{unitFrom}' AND '{unitTo}' /*AND MAINTAB.T_VERIFY IS  NULL */ ORDER BY MAINTAB.T_UNIT_NO");
        }
        //For Antibody
        public DataTable GetAntibodyData()
        {
            return Query($"SELECT 2 T_ANTIBODY ,'NEG' T_ANTIBODY_1 FROM DUAL UNION SELECT 1 T_ANTIBODY , 'POS' T_ANTIBODY_1 FROM DUAL");
        }

        //For DU Dropdown Data
        public DataTable GetDuData()
        {
            return Query($"SELECT '1' T_DU, 'Positive' T_DU_NAME FROM dual UNION SELECT '2' T_DU, 'Negative' T_DU_NAME FROM DUAL");
        }

        //For Verified Data 

        public DataTable GetVerifidData(string T_ENTRY_USER, string T_EMP_CODE, string T_ROLE_CODE)
        {
            return Query($"SELECT T_USER_NAME,T_ROLE_CODE,T_ENTRY_USER,T_EMP_CODE T_VERIFIED_BY," +
                         $"T_LOGIN_NAME,T_SITE_CODE,T_LAST_LOGIN, T_USER_NAME2 FROM T01009 WHERE T_ENTRY_USER = '{T_ENTRY_USER}' AND T_EMP_CODE = '{T_EMP_CODE}' AND T_ROLE_CODE = '{T_ROLE_CODE}'");
        }

        //Insert Statement
        public bool InsertT12220(string T_ENTRY_USER, string T_UNIT_NO, string T_BLOOD_GROUP)
        {
            return Command($"INSERT INTO T12220 (T_ENTRY_USER,T_ENTRY_DATE,T_ENTRY_TIME,T_UNIT_NO,T_BLOOD_GROUP,T_OLG_BLOOD_GROUP)VALUES('{T_ENTRY_USER}',SYSDATE,TO_CHAR(SYSDATE, 'HH24MI'),'{T_UNIT_NO}','{T_BLOOD_GROUP}','{T_BLOOD_GROUP}')");
        }

        public bool InsertT12163(string ABO, string T_UNIT_NO, string T_ANTIBODY, string T_DU, string RH_KELL, string RH_PHENO)
        {
            return Command($"INSERT INTO T12163 (ABO,T_UNIT_NO,T_ANTIBODY,T_DU,RH_KELL,RH_PHENO)VALUES('{ABO}','{T_UNIT_NO}','{T_ANTIBODY}','{T_DU}','{RH_KELL}','{RH_PHENO}')");
        }

        //Update Statement

        public bool UpdateT12019(string T_ENTRY_USER,string T_ANTIBODY, string T_ANTIBODY_1, string T_DU, string T_VERIFY, string T_VERIFIED_BY,string T_NOTES,string T_BLOOD_GROUP, string T_UNIT_NO)
        {
            if (T_ANTIBODY_1 == "POS")
            {
                return Command($"UPDATE T12019 SET T_UPD_USER='{T_ENTRY_USER}',T_UPD_DATE=TRUNC(SYSDATE),T_VIOROLOGY_RESULT ='2',T_DU='{T_DU}',T_VERIFY='{T_VERIFY}',T_VERIFIED_BY='{T_VERIFIED_BY}',T_NOTES='{T_NOTES}',T_ABO_CODE='{T_BLOOD_GROUP}',T_ANTIBODY_1='{T_ANTIBODY_1}' WHERE T_UNIT_NO='{T_UNIT_NO}'");
            }
            else
            {
                return Command($"UPDATE T12019 SET T_UPD_USER='{T_ENTRY_USER}',T_UPD_DATE=TRUNC(SYSDATE),T_DU='{T_DU}',T_VERIFY='{T_VERIFY}',T_VERIFIED_BY='{T_VERIFIED_BY}',T_NOTES='{T_NOTES}',T_ABO_CODE='{T_BLOOD_GROUP}',T_ANTIBODY_1='{T_ANTIBODY_1}' WHERE T_UNIT_NO='{T_UNIT_NO}'");
                
            }
            
           
        }
        //public bool UpdateT12019_Verfiy(string T_VERIFY, string T_VERIFIED_BY, string T_UNIT_NO, string T_NOTES)
        //{
        //    return Command($"UPDATE T12019 SET T_VERIFY='{T_VERIFY}',T_VERIFIED_BY='{T_VERIFIED_BY}',T_NOTES='{T_NOTES}' WHERE T_UNIT_NO='{T_UNIT_NO}'");
        //}


        public bool UpdateT12220(string T_ENTRY_USER, string T_UNIT_NO, string T_BLOOD_GROUP)
        {
            return Command($"UPDATE T12220  SET T_ENTRY_USER='{T_ENTRY_USER}',T_ENTRY_DATE=TRUNC(SYSDATE),T_ENTRY_TIME=TO_CHAR(SYSDATE, 'HH24MI'),T_BLOOD_GROUP='{T_BLOOD_GROUP}', T_OLG_BLOOD_GROUP='{T_BLOOD_GROUP}' WHERE T_UNIT_NO='{T_UNIT_NO}'");
        }

        public bool UpdateT12163(string ABO, string T_UNIT_NO, string T_ANTIBODY, string T_DU, string RH_KELL, string RH_PHENO)
        {
            return Command($"UPDATE T12163 SET ABO='{ABO}',T_ANTIBODY='{T_ANTIBODY}',T_DU='{T_DU}',RH_KELL='{RH_KELL}',RH_PHENO='{RH_PHENO}' WHERE T_UNIT_NO='{T_UNIT_NO}'");
        }

        public string chkVerify19(string unit)
        {
            string verify = "";
            DataTable dt = Query($"select T_VERIFY from t12019 where T_UNIT_NO ='{unit}'");
            if (dt.Rows.Count>0)
            {
                verify = dt.Rows[0]["T_VERIFY"].ToString();
            }
            return verify;
        }
    }
}